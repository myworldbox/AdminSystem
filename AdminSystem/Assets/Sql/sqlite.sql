-- ========================================
-- 步驟 0: 安全設定
-- ========================================
PRAGMA foreign_keys = OFF;

-- 清除可能殘留的臨時表
DROP TABLE IF EXISTS 客戶資料;
DROP TABLE IF EXISTS 客戶資料_temp_backup;

-- ========================================
-- 步驟 1: 檢查 客戶資料 是否存在
-- ========================================
-- 使用 sqlite_schema 表判斷（SQLite 內建）
CREATE TABLE IF NOT EXISTS 客戶資料_temp_backup AS 
SELECT * FROM 客戶資料 
WHERE 0 = 1;  -- 只複製結構，不複製資料（避免錯誤）

-- 判斷是否真的有舊資料
INSERT OR IGNORE INTO 客戶資料_temp_backup
SELECT * FROM 客戶資料;

-- ========================================
-- 步驟 2: 建立新表（含 CHECK 約束）
-- ========================================
CREATE TABLE 客戶資料 (
    Id INTEGER PRIMARY KEY AUTOINCREMENT,
    客戶名稱 TEXT NOT NULL,
    統一編號 TEXT,
    電話 TEXT,
    傳真 TEXT,
    地址 TEXT,
    Email TEXT,
    客戶分類 TEXT CHECK (客戶分類 IN ('一般', 'VIP', '黑名單', '合作夥伴')),
    是否已刪除 INTEGER NOT NULL DEFAULT 0
);

-- ========================================
-- 步驟 3: 複製資料（若有舊資料）
-- ========================================
INSERT INTO 客戶資料 (
    Id, 客戶名稱, 統一編號, 電話, 傳真, 地址, Email, 客戶分類, 是否已刪除
)
SELECT 
    Id, 客戶名稱, 統一編號, 電話, 傳真, 地址, Email,
    CASE 
        WHEN 客戶分類 IS NULL OR 客戶分類 NOT IN ('一般', 'VIP', '黑名單', '合作夥伴') 
        THEN '一般'
        ELSE 客戶分類 
    END,
    COALESCE(是否已刪除, 0)
FROM 客戶資料_temp_backup;

-- ========================================
-- 步驟 4: 替換舊表（如果存在就刪除）
-- ========================================
DROP TABLE IF EXISTS 客戶資料;
ALTER TABLE 客戶資料 RENAME TO 客戶資料;

-- ========================================
-- 步驟 5: 清除臨時表
-- ========================================
DROP TABLE 客戶資料_temp_backup;

-- ========================================
-- 步驟 6: 建立其他必要表（如果還沒建立）
-- ========================================
CREATE TABLE IF NOT EXISTS 客戶聯絡人 (
    Id INTEGER PRIMARY KEY AUTOINCREMENT,
    客戶Id INTEGER,
    職稱 TEXT,
    姓名 TEXT,
    Email TEXT,
    手機 TEXT,
    電話 TEXT,
    是否已刪除 INTEGER NOT NULL DEFAULT 0,
    FOREIGN KEY (客戶Id) REFERENCES 客戶資料(Id)
);

CREATE TABLE IF NOT EXISTS 客戶銀行資訊 (
    Id INTEGER PRIMARY KEY AUTOINCREMENT,
    客戶Id INTEGER,
    銀行名稱 TEXT,
    銀行代碼 TEXT,
    分行代碼 TEXT,
    帳戶名稱 TEXT,
    帳戶號碼 TEXT,
    是否已刪除 INTEGER NOT NULL DEFAULT 0,
    FOREIGN KEY (客戶Id) REFERENCES 客戶資料(Id)
);

-- ========================================
-- 步驟 7: 建立檢視表（安全覆蓋）
-- ========================================
DROP VIEW IF EXISTS vw_CustomerSummary;

CREATE VIEW vw_CustomerSummary AS
SELECT 
    c.Id,
    c.客戶名稱,
    (SELECT COUNT(*) 
     FROM 客戶聯絡人 
     WHERE 客戶Id = c.Id AND 是否已刪除 = 0) AS 聯絡人數量,
    (SELECT COUNT(*) 
     FROM 客戶銀行資訊 
     WHERE 客戶Id = c.Id AND 是否已刪除 = 0) AS 銀行帳戶數量
FROM 客戶資料 c
WHERE c.是否已刪除 = 0;

-- ========================================
-- 步驟 8: 清除測試資料 + 重置序號
-- ========================================
DELETE FROM 客戶銀行資訊;
DELETE FROM 客戶聯絡人;
DELETE FROM 客戶資料;

DELETE FROM sqlite_sequence WHERE name IN ('客戶資料', '客戶聯絡人', '客戶銀行資訊');

-- ========================================
-- 步驟 9: 插入模擬資料
-- ========================================
INSERT INTO 客戶資料 (客戶名稱, 統一編號, 電話, 傳真, 地址, Email, 客戶分類, 是否已刪除) VALUES
    ('司馬伷', '12345678', '0211-123456', '87654321', '台北市中正區1號', 'test1@example.com', 'VIP', 0),
    ('公孫淵', '87654321', '0211-987654', NULL, '台中市西區2號', NULL, '一般', 0),
    ('曹髦', '11223344', '0211-111654', NULL, NULL, 'test3@example.com', '黑名單', 0),
    ('馮劫', '22334455', '0211-222233', NULL, '新北市板橋區3號', 'feng@example.com', '一般', 0),
    ('劉鏔', '33445566', '0211-333344', '44443333', '台北市大安區4號', 'liubei@example.com', 'VIP', 0),
    ('孫休', '44556677', '0711-555566', NULL, '高雄市鼓山區5號', 'sunquan@example.com', '一般', 0),
    ('司馬懿', '55667788', '0311-222277', NULL, '新北市新店區6號', NULL, '黑名單', 0),
    ('諸葛誕', '66778899', '0411-666677', NULL, '台中市南區7號', 'zhugeliang@example.com', 'VIP', 0),
    ('高演', '77889900', '0511-777788', '88887777', '台南市中西區8號', 'guanyu@example.com', '一般', 0),
    ('史思明', '88990011', '0611-999900', NULL, '新竹市東區9號', 'zhangfei@example.com', 'VIP', 0);

INSERT INTO 客戶聯絡人 (客戶Id, 職稱, 姓名, Email, 手機, 電話, 是否已刪除) VALUES
    (1, '經理', '張三', 'zhang@example.com', '0912-345678', '0211-123456', 0),
    (2, '助理', '李四', 'li@example.com', '0922-345678', NULL, 0),
    (3, '總監', '王五', 'wang@example.com', '0933-111222', '0211-111654', 0),
    (4, '專員', '趙六', 'zhao@example.com', '0933-333444', '0211-222233', 0),
    (5, '顧問', '錢七', 'qian@example.com', '0933-555666', '0211-333344', 0),
    (6, '經理', '周八', 'zhou@example.com', '0933-777888', '0711-555566', 0),
    (7, '助理', '吳九', 'wu@example.com', '0933-999000', NULL, 0),
    (8, '顧問', '鄭十', 'zheng@example.com', '0933-222333', '0411-666677', 0),
    (9, '經理', '陳十一', 'chen@example.com', '0933-444555', '0511-777788', 0),
    (10, '助理', '林十二', 'lin@example.com', '0933-666777', '0611-999900', 0);

INSERT INTO 客戶銀行資訊 (客戶Id, 銀行名稱, 銀行代碼, 分行代碼, 帳戶名稱, 帳戶號碼, 是否已刪除) VALUES
    (1, '台灣銀行', '004', '001', '測試帳戶1', '123456789012', 0),
    (2, '第一銀行', '007', '002', '測試帳戶2', '987654321098', 0),
    (3, '合作金庫', '006', '003', '測試帳戶3', '111122223333', 0),
    (4, '華南銀行', '008', '004', '測試帳戶4', '444455556666', 0),
    (5, '彰化銀行', '009', '005', '測試帳戶5', '777788889999', 0),
    (6, '台新銀行', '812', '006', '測試帳戶6', '000011112222', 0),
    (7, '中國信託', '822', '007', '測試帳戶7', '333344445555', 0),
    (8, '玉山銀行', '808', '008', '測試帳戶8', '666677778888', 0),
    (9, '國泰世華', '013', '009', '測試帳戶9', '999900001111', 0),
    (10, '兆豐銀行', '017', '010', '測試帳戶10', '222233334444', 0);

-- ========================================
-- 完成！可重複執行
-- ========================================
PRAGMA foreign_keys = ON;